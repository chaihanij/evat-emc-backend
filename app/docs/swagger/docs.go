// Package swagger GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag
package swagger

import "github.com/swaggo/swag"

const docTemplate_swagger = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "chaihanij@gmail.com"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/v1/assignment/:assignment_uuid": {
            "put": {
                "description": "API For Update Assignment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ASSIGNMENTS"
                ],
                "summary": "Update Assignment",
                "operationId": "put-assignments",
                "parameters": [
                    {
                        "type": "string",
                        "description": "for authentication",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "assignment_uuid of assignments",
                        "name": "assignment_uuid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "All params related to assignment",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.UpdateAssignmentRequestJSON"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.UpdateAssignmentResponseSwagger"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/assignments": {
            "get": {
                "description": "API For Find One Assignment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MEMBERS"
                ],
                "summary": "Find One Assignment",
                "operationId": "get-one-assignment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "for authentication",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "uuid of assignments",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.FindOneAssignmentResponseSwagger"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "API For Create Assignments",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ASSIGNMENTS"
                ],
                "summary": "Create Assignments",
                "operationId": "post-assignment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "for authentication",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "uuid of member",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "All params related to assignments",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.CreateAssignmentRequestJSON"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.CreateAssignmentResponseSwagger"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/assignments/:assignment_uuid": {
            "delete": {
                "description": "API For Delete Assignment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ASSIGNMENTS"
                ],
                "summary": "Delete Assignment",
                "operationId": "delete-assignment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "for authentication",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "assignment_uuid of assignments",
                        "name": "assignment_uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.DeleteAssignmentResponseSwagger"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/assignments/:assignment_uuid/document": {
            "post": {
                "description": "API For Update Assignment Document",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MEMBERS"
                ],
                "summary": "Update Assignment Document",
                "operationId": "post-assignment-document",
                "parameters": [
                    {
                        "type": "string",
                        "description": "for authentication",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "assignment_uuid of assignments",
                        "name": "assignment_uuid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "file document upload",
                        "name": "document",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.UpdateAssignmentDocumentResponseSwagger"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/assignments/:assignment_uuid/image": {
            "post": {
                "description": "API For Update Assignment Image",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MEMBERS"
                ],
                "summary": "Update Assignment Image",
                "operationId": "post-assignment-image",
                "parameters": [
                    {
                        "type": "string",
                        "description": "for authentication",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "assignment_uuid of assignments",
                        "name": "assignment_uuid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "file image upload",
                        "name": "image",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.UpdateAssignmentImageResponseSwagger"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/files/:file_uuid": {
            "get": {
                "description": "API For Find One File",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "FILES"
                ],
                "summary": "Find One File",
                "operationId": "get-one-file",
                "parameters": [
                    {
                        "type": "string",
                        "description": "file_uuid of files",
                        "name": "file_uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/login": {
            "post": {
                "description": "API For Login",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "USERS"
                ],
                "summary": "Login",
                "operationId": "post-login",
                "parameters": [
                    {
                        "description": "All params related to users",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.LoginRequestJSON"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.LoginResponseSwagger"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/members": {
            "get": {
                "description": "API For Find One Member",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MEMBERS"
                ],
                "summary": "Find One Member",
                "operationId": "get-one-member",
                "parameters": [
                    {
                        "type": "string",
                        "description": "for authentication",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "uuid of member",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.FindAllMemberResponseSwagger"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "API For Create Member",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MEMBERS"
                ],
                "summary": "Create Member",
                "operationId": "post-member",
                "parameters": [
                    {
                        "type": "string",
                        "description": "for authentication",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "uuid of member",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "All params related to members",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.CreateMemberRequestJSON"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.CreateMemberResponseSwagger"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/members/:member_uuid": {
            "delete": {
                "description": "API For Delete Member",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MEMBERS"
                ],
                "summary": "Delete Member",
                "operationId": "delete-member",
                "parameters": [
                    {
                        "type": "string",
                        "description": "for authentication",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "member_uuid of member",
                        "name": "member_uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.DeleteMemberResponseSwagger"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/members/:member_uuid/documents": {
            "post": {
                "description": "API For Update Member  Push Document",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MEMBERS"
                ],
                "summary": "Update Member Push Document",
                "operationId": "post-member-documents",
                "parameters": [
                    {
                        "type": "string",
                        "description": "for authentication",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "member_uuid of member",
                        "name": "member_uuid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "file document upload",
                        "name": "document",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.UpdateMemberPushDocumentResponseSwagger"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/members/:member_uuid/documents/:document_uuid": {
            "delete": {
                "description": "API For Update Member Pull Document",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MEMBERS"
                ],
                "summary": "Update Member Pull Document",
                "operationId": "delete-member-documents",
                "parameters": [
                    {
                        "type": "string",
                        "description": "for authentication",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "member_uuid of member",
                        "name": "member_uuid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "document_uuid of files",
                        "name": "document_uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.UpdateMemberPullDocumentResponseSwagger"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/members/:member_uuid/image": {
            "post": {
                "description": "API For Update Member Image",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MEMBERS"
                ],
                "summary": "Update Member Image",
                "operationId": "post-member-image",
                "parameters": [
                    {
                        "type": "string",
                        "description": "for authentication",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "member_uuid of member",
                        "name": "member_uuid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "file image upload",
                        "name": "image",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.UpdateMemberImageResponseSwagger"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/members/:uuid": {
            "put": {
                "description": "API For Update Member",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MEMBERS"
                ],
                "summary": "Update Member",
                "operationId": "put-member",
                "parameters": [
                    {
                        "type": "string",
                        "description": "for authentication",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "member_uuid of member",
                        "name": "member_uuid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "All params related to members",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.UpdateMemberRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.UpdateMemberResponseSwagger"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/teams": {
            "get": {
                "description": "API For Find All Team",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "TEAMS"
                ],
                "summary": "Find All Team",
                "operationId": "get-all-teams",
                "parameters": [
                    {
                        "type": "string",
                        "description": "for authentication",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "year of EVAT eMC",
                        "name": "year",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Offset for search teams",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "PageSize of teams",
                        "name": "pageSize",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.FindAllTeamResponseSwagger"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "API For Create Team",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "TEAMS"
                ],
                "summary": "Create Team",
                "operationId": "post-team",
                "parameters": [
                    {
                        "type": "string",
                        "description": "for authentication",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "All params related to teams",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.CreateTeamRequestJSON"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.CreateTeamResponseSwagger"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/teams/:uid": {
            "get": {
                "description": "API For Find One Team",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "TEAMS"
                ],
                "summary": "Find One Team",
                "operationId": "get-one-team",
                "parameters": [
                    {
                        "type": "string",
                        "description": "for authentication",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "uuid of team",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.FindOneTeamResponseSwagger"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/teams/:uuid": {
            "put": {
                "description": "API For Update Team",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "TEAMS"
                ],
                "summary": "Update Team",
                "operationId": "put-team",
                "parameters": [
                    {
                        "type": "string",
                        "description": "for authentication",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "uuid of teams",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "All params related to teams",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.UpdateTeamRequestJSON"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.UpdateTeamResponseSwagger"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "API For Delete Team",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "TEAMS"
                ],
                "summary": "Delete Team",
                "operationId": "delete-team",
                "parameters": [
                    {
                        "type": "string",
                        "description": "for authentication",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "uuid of teams",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.DeleteTeamResponseSwagger"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/users": {
            "get": {
                "description": "API For Find All User",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "USERS"
                ],
                "summary": "Find All User",
                "operationId": "get-all-user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "for authentication",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "year of EVAT eMC",
                        "name": "year",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Offset for search users",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "PageSize of users",
                        "name": "pageSize",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.FindAllUserResponseSwagger"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "API For Create User",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "USERS"
                ],
                "summary": "Create User",
                "operationId": "post-user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "for authentication",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "All params related to users",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.CreateUserRequestJSON"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.CreateUserResponseSwagger"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/users/:uid": {
            "get": {
                "description": "API For Find One User",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "USERS"
                ],
                "summary": "Find One User",
                "operationId": "get-one-user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "for authentication",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "uid of user",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.FindOneUserResponseSwagger"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/users/:uuid": {
            "put": {
                "description": "API For Update User",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "USERS"
                ],
                "summary": "Update User",
                "operationId": "put-user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "for authentication",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "uid of user",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "All params related to users",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.UpdateUserRequestJSON"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.UpdateUserResponseSwagger"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "API For Delete User",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "USERS"
                ],
                "summary": "Delete User",
                "operationId": "detele-user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "for authentication",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "uid of user",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.DeleteUserResponseSwagger"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dtos.AssignmentResponse": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "document": {},
                "dueDate": {
                    "type": "string"
                },
                "fullScore": {
                    "type": "number"
                },
                "image": {},
                "isActive": {
                    "type": "boolean"
                },
                "no": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "updatedBy": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                },
                "year": {
                    "type": "string"
                }
            }
        },
        "dtos.CreateAssignmentRequestJSON": {
            "type": "object",
            "required": [
                "due_date",
                "no",
                "title",
                "year"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "due_date": {
                    "type": "string"
                },
                "full_score": {
                    "type": "number"
                },
                "is_active": {
                    "type": "boolean"
                },
                "no": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "year": {
                    "type": "string"
                }
            }
        },
        "dtos.CreateAssignmentResponseJSON": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "document": {},
                "dueDate": {
                    "type": "string"
                },
                "fullScore": {
                    "type": "number"
                },
                "image": {},
                "isActive": {
                    "type": "boolean"
                },
                "no": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "updatedBy": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                },
                "year": {
                    "type": "string"
                }
            }
        },
        "dtos.CreateAssignmentResponseSwagger": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/dtos.CreateAssignmentResponseJSON"
                },
                "statusCode": {
                    "type": "integer",
                    "example": 1000
                },
                "statusMessage": {
                    "type": "string",
                    "example": "Success"
                },
                "timestamp": {
                    "type": "string",
                    "example": "2015-06-30T21:59:59Z"
                }
            }
        },
        "dtos.CreateMemberRequestJSON": {
            "type": "object",
            "required": [
                "firstname",
                "lastname",
                "memberType",
                "teamUUID"
            ],
            "properties": {
                "academy": {
                    "type": "string"
                },
                "address": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "firstname": {
                    "type": "string"
                },
                "isTeamLeader": {
                    "type": "boolean"
                },
                "lastname": {
                    "type": "string"
                },
                "memberType": {
                    "type": "string",
                    "example": "MEMBER, MENTOR"
                },
                "teamUUID": {
                    "type": "string"
                },
                "tel": {
                    "type": "string"
                },
                "year": {
                    "type": "string"
                }
            }
        },
        "dtos.CreateMemberResponseJSON": {
            "type": "object",
            "properties": {
                "academy": {
                    "type": "string"
                },
                "address": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "string"
                },
                "documents": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dtos.FileResponse"
                    }
                },
                "email": {
                    "type": "string"
                },
                "firstname": {
                    "type": "string"
                },
                "image": {
                    "$ref": "#/definitions/dtos.FileResponse"
                },
                "isTeamLeader": {
                    "type": "boolean"
                },
                "lastname": {
                    "type": "string"
                },
                "memberType": {
                    "type": "string"
                },
                "tel": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "updatedBy": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                },
                "year": {
                    "type": "string"
                }
            }
        },
        "dtos.CreateMemberResponseSwagger": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/dtos.CreateMemberResponseJSON"
                },
                "statusCode": {
                    "type": "integer",
                    "example": 1000
                },
                "statusMessage": {
                    "type": "string",
                    "example": "Success"
                },
                "timestamp": {
                    "type": "string",
                    "example": "2015-06-30T21:59:59Z"
                }
            }
        },
        "dtos.CreateTeamRequestJSON": {
            "type": "object",
            "required": [
                "academy",
                "code",
                "detali",
                "name",
                "teamType",
                "year"
            ],
            "properties": {
                "academy": {
                    "type": "string"
                },
                "code": {
                    "type": "string"
                },
                "detali": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "teamType": {
                    "type": "string"
                },
                "year": {
                    "type": "string"
                }
            }
        },
        "dtos.CreateTeamResponseJSON": {
            "type": "object",
            "properties": {
                "academy": {
                    "type": "string"
                },
                "code": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "string"
                },
                "detail": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "teamType": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "updatedBy": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                },
                "year": {
                    "type": "string"
                }
            }
        },
        "dtos.CreateTeamResponseSwagger": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/dtos.CreateTeamResponseJSON"
                },
                "statusCode": {
                    "type": "integer",
                    "example": 1000
                },
                "statusMessage": {
                    "type": "string",
                    "example": "Success"
                },
                "timestamp": {
                    "type": "string",
                    "example": "2015-06-30T21:59:59Z"
                }
            }
        },
        "dtos.CreateUserRequestJSON": {
            "type": "object",
            "required": [
                "firstname",
                "lastname",
                "password",
                "username",
                "year"
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "firstname": {
                    "type": "string"
                },
                "lastname": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "teamUID": {
                    "type": "string"
                },
                "tel": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                },
                "year": {
                    "type": "string"
                }
            }
        },
        "dtos.CreateUserResponseJSON": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "firstname": {
                    "type": "string"
                },
                "isActive": {
                    "type": "boolean"
                },
                "lastLogin": {
                    "type": "string"
                },
                "lastname": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "teamUID": {
                    "type": "string"
                },
                "tel": {
                    "type": "string"
                },
                "uid": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                },
                "year": {
                    "type": "string"
                }
            }
        },
        "dtos.CreateUserResponseSwagger": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/dtos.CreateUserResponseJSON"
                },
                "statusCode": {
                    "type": "integer",
                    "example": 1000
                },
                "statusMessage": {
                    "type": "string",
                    "example": "Success"
                },
                "timestamp": {
                    "type": "string",
                    "example": "2015-06-30T21:59:59Z"
                }
            }
        },
        "dtos.DeleteAssignmentResponseSwagger": {
            "type": "object",
            "properties": {
                "statusCode": {
                    "type": "integer",
                    "example": 1000
                },
                "statusMessage": {
                    "type": "string",
                    "example": "Success"
                },
                "timestamp": {
                    "type": "string",
                    "example": "2015-06-30T21:59:59Z"
                }
            }
        },
        "dtos.DeleteMemberResponseSwagger": {
            "type": "object",
            "properties": {
                "statusCode": {
                    "type": "integer",
                    "example": 1000
                },
                "statusMessage": {
                    "type": "string",
                    "example": "Success"
                },
                "timestamp": {
                    "type": "string",
                    "example": "2015-06-30T21:59:59Z"
                }
            }
        },
        "dtos.DeleteTeamResponseSwagger": {
            "type": "object",
            "properties": {
                "statusCode": {
                    "type": "integer",
                    "example": 1000
                },
                "statusMessage": {
                    "type": "string",
                    "example": "Success"
                },
                "timestamp": {
                    "type": "string",
                    "example": "2015-06-30T21:59:59Z"
                }
            }
        },
        "dtos.DeleteUserResponseSwagger": {
            "type": "object",
            "properties": {
                "data": {},
                "statusCode": {
                    "type": "integer",
                    "example": 1000
                },
                "statusMessage": {
                    "type": "string",
                    "example": "Success"
                },
                "timestamp": {
                    "type": "string",
                    "example": "2015-06-30T21:59:59Z"
                }
            }
        },
        "dtos.FileResponse": {
            "type": "object",
            "properties": {
                "fileName": {
                    "type": "string"
                },
                "originalFileName": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "dtos.FindAllAssignmentResponseSwagger": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dtos.AssignmentResponse"
                    }
                },
                "metaData": {
                    "$ref": "#/definitions/gitlab.com_chaihanij_evat_app_layers_deliveries_http_assignments_dtos.MetaDataResponse"
                },
                "statusCode": {
                    "type": "integer",
                    "example": 1000
                },
                "statusMessage": {
                    "type": "string",
                    "example": "Success"
                },
                "timestamp": {
                    "type": "string",
                    "example": "2015-06-30T21:59:59Z"
                }
            }
        },
        "dtos.FindAllMemberResponseSwagger": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/gitlab.com_chaihanij_evat_app_layers_deliveries_http_members_dtos.MemberResponse"
                    }
                },
                "metaData": {
                    "$ref": "#/definitions/gitlab.com_chaihanij_evat_app_layers_deliveries_http_members_dtos.MetaDataResponse"
                },
                "statusCode": {
                    "type": "integer",
                    "example": 1000
                },
                "statusMessage": {
                    "type": "string",
                    "example": "Success"
                },
                "timestamp": {
                    "type": "string",
                    "example": "2015-06-30T21:59:59Z"
                }
            }
        },
        "dtos.FindAllTeamResponseSwagger": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dtos.TeamResponse"
                    }
                },
                "metaData": {
                    "$ref": "#/definitions/gitlab.com_chaihanij_evat_app_layers_deliveries_http_teams_dtos.MetaDataResponse"
                },
                "statusCode": {
                    "type": "integer",
                    "example": 1000
                },
                "statusMessage": {
                    "type": "string",
                    "example": "Success"
                },
                "timestamp": {
                    "type": "string",
                    "example": "2015-06-30T21:59:59Z"
                }
            }
        },
        "dtos.FindAllUserResponseSwagger": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dtos.User"
                    }
                },
                "metaData": {
                    "$ref": "#/definitions/gitlab.com_chaihanij_evat_app_layers_deliveries_http_users_dtos.MetaDataResponse"
                },
                "statusCode": {
                    "type": "integer",
                    "example": 1000
                },
                "statusMessage": {
                    "type": "string",
                    "example": "Success"
                },
                "timestamp": {
                    "type": "string",
                    "example": "2015-06-30T21:59:59Z"
                }
            }
        },
        "dtos.FindOneAssignmentResponseJSON": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "document": {},
                "dueDate": {
                    "type": "string"
                },
                "fullScore": {
                    "type": "number"
                },
                "image": {},
                "isActive": {
                    "type": "boolean"
                },
                "no": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "updatedBy": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                },
                "year": {
                    "type": "string"
                }
            }
        },
        "dtos.FindOneAssignmentResponseSwagger": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/dtos.FindOneAssignmentResponseJSON"
                },
                "statusCode": {
                    "type": "integer",
                    "example": 1000
                },
                "statusMessage": {
                    "type": "string",
                    "example": "Success"
                },
                "timestamp": {
                    "type": "string",
                    "example": "2015-06-30T21:59:59Z"
                }
            }
        },
        "dtos.FindOneTeamResponseJSON": {
            "type": "object",
            "properties": {
                "academy": {
                    "type": "string"
                },
                "code": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "string"
                },
                "detail": {
                    "type": "string"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/gitlab.com_chaihanij_evat_app_layers_deliveries_http_teams_dtos.MemberResponse"
                    }
                },
                "name": {
                    "type": "string"
                },
                "teamType": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "updatedBy": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                },
                "year": {
                    "type": "string"
                }
            }
        },
        "dtos.FindOneTeamResponseSwagger": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/dtos.FindOneTeamResponseJSON"
                },
                "statusCode": {
                    "type": "integer",
                    "example": 1000
                },
                "statusMessage": {
                    "type": "string",
                    "example": "Success"
                },
                "timestamp": {
                    "type": "string",
                    "example": "2015-06-30T21:59:59Z"
                }
            }
        },
        "dtos.FindOneUserResponseJSON": {
            "type": "object",
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "activateCode": {
                    "type": "string"
                },
                "address": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "firstname": {
                    "type": "string"
                },
                "isActive": {
                    "type": "boolean"
                },
                "isEmailVerify": {
                    "type": "boolean"
                },
                "lastLogin": {
                    "type": "string"
                },
                "lastname": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "teamUUID": {
                    "type": "string"
                },
                "tel": {
                    "type": "string"
                },
                "uid": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "updatedBy": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                },
                "year": {
                    "type": "string"
                }
            }
        },
        "dtos.FindOneUserResponseSwagger": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/dtos.FindOneUserResponseJSON"
                },
                "statusCode": {
                    "type": "integer",
                    "example": 1000
                },
                "statusMessage": {
                    "type": "string",
                    "example": "Success"
                },
                "timestamp": {
                    "type": "string",
                    "example": "2015-06-30T21:59:59Z"
                }
            }
        },
        "dtos.LoginRequestJSON": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "testuser@gmail.com"
                },
                "password": {
                    "type": "string",
                    "example": "P@ssw0rd@!@#$"
                }
            }
        },
        "dtos.LoginResponseJSON": {
            "type": "object",
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "firstname": {
                    "type": "string"
                },
                "lastLogin": {
                    "type": "string"
                },
                "lastname": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "teamUID": {
                    "type": "string"
                },
                "uid": {
                    "type": "string"
                }
            }
        },
        "dtos.LoginResponseSwagger": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/dtos.LoginResponseJSON"
                },
                "statusCode": {
                    "type": "integer",
                    "example": 1000
                },
                "statusMessage": {
                    "type": "string",
                    "example": "Success"
                },
                "timestamp": {
                    "type": "string",
                    "example": "2015-06-30T21:59:59Z"
                }
            }
        },
        "dtos.TeamResponse": {
            "type": "object",
            "properties": {
                "academy": {
                    "type": "string"
                },
                "code": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "string"
                },
                "detail": {
                    "type": "string"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/gitlab.com_chaihanij_evat_app_layers_deliveries_http_teams_dtos.MemberResponse"
                    }
                },
                "name": {
                    "type": "string"
                },
                "teamType": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "updatedBy": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                },
                "year": {
                    "type": "string"
                }
            }
        },
        "dtos.UpdateAssignmentDocumentResponseSwagger": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/dtos.FileResponse"
                },
                "statusCode": {
                    "type": "integer",
                    "example": 1000
                },
                "statusMessage": {
                    "type": "string",
                    "example": "Success"
                },
                "timestamp": {
                    "type": "string",
                    "example": "2015-06-30T21:59:59Z"
                }
            }
        },
        "dtos.UpdateAssignmentImageResponseSwagger": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/dtos.FileResponse"
                },
                "statusCode": {
                    "type": "integer",
                    "example": 1000
                },
                "statusMessage": {
                    "type": "string",
                    "example": "Success"
                },
                "timestamp": {
                    "type": "string",
                    "example": "2015-06-30T21:59:59Z"
                }
            }
        },
        "dtos.UpdateAssignmentRequestJSON": {
            "type": "object",
            "required": [
                "due_date",
                "no",
                "title",
                "year"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "due_date": {
                    "type": "string"
                },
                "full_score": {
                    "type": "number"
                },
                "is_active": {
                    "type": "boolean"
                },
                "no": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "year": {
                    "type": "string"
                }
            }
        },
        "dtos.UpdateAssignmentResponseJSON": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "document": {},
                "dueDate": {
                    "type": "string"
                },
                "fullScore": {
                    "type": "number"
                },
                "image": {},
                "isActive": {
                    "type": "boolean"
                },
                "no": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "updatedBy": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                },
                "year": {
                    "type": "string"
                }
            }
        },
        "dtos.UpdateAssignmentResponseSwagger": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/dtos.UpdateAssignmentResponseJSON"
                },
                "statusCode": {
                    "type": "integer",
                    "example": 1000
                },
                "statusMessage": {
                    "type": "string",
                    "example": "Success"
                },
                "timestamp": {
                    "type": "string",
                    "example": "2015-06-30T21:59:59Z"
                }
            }
        },
        "dtos.UpdateMemberImageResponseSwagger": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/dtos.FileResponse"
                },
                "statusCode": {
                    "type": "integer",
                    "example": 1000
                },
                "statusMessage": {
                    "type": "string",
                    "example": "Success"
                },
                "timestamp": {
                    "type": "string",
                    "example": "2015-06-30T21:59:59Z"
                }
            }
        },
        "dtos.UpdateMemberPullDocumentResponseSwagger": {
            "type": "object",
            "properties": {
                "statusCode": {
                    "type": "integer",
                    "example": 1000
                },
                "statusMessage": {
                    "type": "string",
                    "example": "Success"
                },
                "timestamp": {
                    "type": "string",
                    "example": "2015-06-30T21:59:59Z"
                }
            }
        },
        "dtos.UpdateMemberPushDocumentResponseSwagger": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/dtos.FileResponse"
                },
                "statusCode": {
                    "type": "integer",
                    "example": 1000
                },
                "statusMessage": {
                    "type": "string",
                    "example": "Success"
                },
                "timestamp": {
                    "type": "string",
                    "example": "2015-06-30T21:59:59Z"
                }
            }
        },
        "dtos.UpdateMemberRequest": {
            "type": "object",
            "required": [
                "firstname",
                "lastname",
                "memberType",
                "teamUUID"
            ],
            "properties": {
                "academy": {
                    "type": "string"
                },
                "address": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "firstname": {
                    "description": "json",
                    "type": "string"
                },
                "isTeamLeader": {
                    "type": "boolean"
                },
                "lastname": {
                    "type": "string"
                },
                "memberType": {
                    "type": "string",
                    "example": "MEMBER, MENTOR"
                },
                "teamUUID": {
                    "type": "string"
                },
                "tel": {
                    "type": "string"
                },
                "year": {
                    "type": "string"
                }
            }
        },
        "dtos.UpdateMemberResponseJSON": {
            "type": "object",
            "properties": {
                "academy": {
                    "type": "string"
                },
                "address": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "string"
                },
                "documents": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dtos.FileResponse"
                    }
                },
                "email": {
                    "type": "string"
                },
                "firstname": {
                    "type": "string"
                },
                "image": {
                    "$ref": "#/definitions/dtos.FileResponse"
                },
                "isTeamLeader": {
                    "type": "boolean"
                },
                "lastname": {
                    "type": "string"
                },
                "memberType": {
                    "type": "string"
                },
                "tel": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "updatedBy": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                },
                "year": {
                    "type": "string"
                }
            }
        },
        "dtos.UpdateMemberResponseSwagger": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/dtos.UpdateMemberResponseJSON"
                },
                "statusCode": {
                    "type": "integer",
                    "example": 1000
                },
                "statusMessage": {
                    "type": "string",
                    "example": "Success"
                },
                "timestamp": {
                    "type": "string",
                    "example": "2015-06-30T21:59:59Z"
                }
            }
        },
        "dtos.UpdateTeamRequestJSON": {
            "type": "object",
            "required": [
                "code",
                "name",
                "teamType",
                "year"
            ],
            "properties": {
                "academy": {
                    "type": "string"
                },
                "code": {
                    "type": "string"
                },
                "detail": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "teamType": {
                    "type": "string"
                },
                "year": {
                    "type": "string"
                }
            }
        },
        "dtos.UpdateTeamResponseSwagger": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/dtos.FindOneTeamResponseJSON"
                },
                "statusCode": {
                    "type": "integer",
                    "example": 1000
                },
                "statusMessage": {
                    "type": "string",
                    "example": "Success"
                },
                "timestamp": {
                    "type": "string",
                    "example": "2015-06-30T21:59:59Z"
                }
            }
        },
        "dtos.UpdateUserRequestJSON": {
            "type": "object",
            "required": [
                "username"
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "firstname": {
                    "type": "string"
                },
                "isActive": {
                    "type": "boolean"
                },
                "lastname": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "teamUUID": {
                    "type": "string"
                },
                "tel": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                },
                "year": {
                    "type": "string"
                }
            }
        },
        "dtos.UpdateUserResponseJSON": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "firstname": {
                    "type": "string"
                },
                "isActive": {
                    "type": "boolean"
                },
                "lastname": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "teamUUID": {
                    "type": "string"
                },
                "tel": {
                    "type": "string"
                },
                "uid": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "updatedBy": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                },
                "year": {
                    "type": "string"
                }
            }
        },
        "dtos.UpdateUserResponseSwagger": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/dtos.UpdateUserResponseJSON"
                },
                "statusCode": {
                    "type": "integer",
                    "example": 1000
                },
                "statusMessage": {
                    "type": "string",
                    "example": "Success"
                },
                "timestamp": {
                    "type": "string",
                    "example": "2015-06-30T21:59:59Z"
                }
            }
        },
        "dtos.User": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "firstname": {
                    "type": "string"
                },
                "isActive": {
                    "type": "boolean"
                },
                "lastLogin": {
                    "type": "string"
                },
                "lastname": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "uid": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "updatedBy": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                },
                "year": {
                    "type": "string"
                }
            }
        },
        "gitlab.com_chaihanij_evat_app_layers_deliveries_http_assignments_dtos.MetaDataResponse": {
            "type": "object",
            "properties": {
                "page": {
                    "type": "integer",
                    "example": 1
                },
                "pageSize": {
                    "type": "integer",
                    "example": 20
                },
                "totalRecords": {
                    "type": "integer",
                    "example": 10
                }
            }
        },
        "gitlab.com_chaihanij_evat_app_layers_deliveries_http_members_dtos.MemberResponse": {
            "type": "object",
            "properties": {
                "academy": {
                    "type": "string"
                },
                "address": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "string"
                },
                "documents": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dtos.FileResponse"
                    }
                },
                "email": {
                    "type": "string"
                },
                "firstname": {
                    "type": "string"
                },
                "image": {
                    "$ref": "#/definitions/dtos.FileResponse"
                },
                "isTeamLeader": {
                    "type": "boolean"
                },
                "lastname": {
                    "type": "string"
                },
                "memberType": {
                    "type": "string"
                },
                "tel": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "updatedBy": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                },
                "year": {
                    "type": "string"
                }
            }
        },
        "gitlab.com_chaihanij_evat_app_layers_deliveries_http_members_dtos.MetaDataResponse": {
            "type": "object",
            "properties": {
                "page": {
                    "type": "integer",
                    "example": 1
                },
                "pageSize": {
                    "type": "integer",
                    "example": 20
                },
                "totalRecords": {
                    "type": "integer",
                    "example": 10
                }
            }
        },
        "gitlab.com_chaihanij_evat_app_layers_deliveries_http_teams_dtos.MemberResponse": {
            "type": "object",
            "properties": {
                "academy": {
                    "type": "string"
                },
                "address": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "string"
                },
                "documents": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dtos.FileResponse"
                    }
                },
                "email": {
                    "type": "string"
                },
                "firstname": {
                    "type": "string"
                },
                "image": {
                    "$ref": "#/definitions/dtos.FileResponse"
                },
                "isTeamLeader": {
                    "type": "boolean"
                },
                "lastname": {
                    "type": "string"
                },
                "memberType": {
                    "type": "string"
                },
                "tel": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "updatedBy": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                },
                "year": {
                    "type": "string"
                }
            }
        },
        "gitlab.com_chaihanij_evat_app_layers_deliveries_http_teams_dtos.MetaDataResponse": {
            "type": "object",
            "properties": {
                "page": {
                    "type": "integer",
                    "example": 1
                },
                "pageSize": {
                    "type": "integer",
                    "example": 20
                },
                "totalRecords": {
                    "type": "integer",
                    "example": 10
                }
            }
        },
        "gitlab.com_chaihanij_evat_app_layers_deliveries_http_users_dtos.MetaDataResponse": {
            "type": "object",
            "properties": {
                "page": {
                    "type": "integer",
                    "example": 1
                },
                "pageSize": {
                    "type": "integer",
                    "example": 20
                },
                "totalRecords": {
                    "type": "integer",
                    "example": 10
                }
            }
        },
        "utils.ErrorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "error message will be show here"
                },
                "statusCode": {
                    "type": "integer",
                    "example": 1001
                },
                "statusMessage": {
                    "type": "string",
                    "example": "fail"
                },
                "timestamp": {
                    "type": "string",
                    "example": "2015-06-30T21:59:59Z"
                }
            }
        }
    }
}`

// SwaggerInfo_swagger holds exported Swagger Info so clients can modify it
var SwaggerInfo_swagger = &swag.Spec{
	Version:          "1.0.0",
	Host:             "",
	BasePath:         "{{evat-service}}",
	Schemes:          []string{},
	Title:            "EVAT eMCS Service",
	Description:      "EVAT eMCS Service.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate_swagger,
}

func init() {
	swag.Register(SwaggerInfo_swagger.InstanceName(), SwaggerInfo_swagger)
}
